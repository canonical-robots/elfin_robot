<launch>

  <!-- This launch file provides a connection to Elfin robots
       using the standard ROS Industrial driver interface.

       Several nodes are started, to supply both low-level robot communication
       and higher-level actionlib support:
         - robot_state : publishes current joint positions and robot state data
         - motion_download_interface : command robot motion by sending motion points to robot
         - joint_trajectory_action : actionlib interface to control robot motion
    Usage:
      robot_interface.launch  
  -->

  <!-- robot_state: publishes joint positions and robot-state data -->
  <node pkg="elfin_driver" type="elfin_driver_robot_state" name="elfin_robot_state"/>

  <!-- motion_download_interface: controls robot and provide feedback -->
  <node pkg="elfin_driver" type="motion_download_interface" name="elfin_robot_motion"/>

  <!-- robot_mockup: simulates required topics of an elfin robot to test the ROS Industrial driver-->
  <node pkg="elfin_driver" type="elfin_driver_mockup" name="elfin_robot_mockup"/>
  
  <!-- utest: unitary test of ROS Industrial driver-->
  <test pkg="elfin_driver" type="utest_elfin_driver" test-name="elfin_driver_test"/>


</launch>
